'''
input
3 : 3개의 tc가 주어질 예정
0 : f(0)에서의 호출횟수는?
1 : f(1)에서의 호출횟수는?
3 : f(3)에서의 호출횟수는?

output
1 0 : 0은 1번, 1은 0번 출력됨.
0 1 : 0은 1번, 1은 1번 출력됨.
1 2 : 0은 1번, 1은 2번 출력됨.

strategy
N은 0이상 40이하. dp니까 일단 각 경우를 쭉 써내려가며 감을 잡아보자.


4 -> d(3)+d(2)
3 -> 1(1호출), 2(1호출 0호출)
2 -> 1호출 0호출
1 -> 1호출
0 -> 0호출

이런식으로 점점 수가 올라갈수록 전의 횟수들이 쓰이는 걸 알 수 있으니
dp테이블을 두 개 만들어서 테스트케이스를 다 받은 다음에,
해당 케이스의 max만큼 반복문을 돌리며

원래 순서 따라 인덱스 잡아 출력하면 될 것이다.

하다보니 그냥 40까지 있으니까 미리 돌려놓는게 좋겠다.

-> range를 41까지 돌리는 것에 유의!
'''

d0 = [0]*41
d0[0] = 1
d1 = [0]*41
d1[1] = 1

for i in range(2, 41):
    d0[i] = d0[i-1]+d0[i-2]
    d1[i] = d1[i-1]+d1[i-2]

tc_n = int(input())
for _ in range(tc_n):
    n = int(input())
    print(d0[n], d1[n])
